{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Bio","_2998135601","data","react_default","a","createElement","style","display","marginBottom","rhythm","BlogPostTemplate","componentDidMount","name","timeout","Promise","resolve","reject","waited","wait","interval","setTimeout","undefined","window","message","then","top","MathJax","Hub","Config","tex2jax","inlineMath","displayMath","processEscapes","processEnvironments","skipTags","TeX","equationNumbers","autoNumber","extensions","Queue","componentDidUpdate","render","post","this","props","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","layout","location","seo","frontmatter","description","excerpt","Helmet_default","type","src","async","marginTop","Object","assign","scale","date","dangerouslySetInnerHTML","__html","html","bio","flexWrap","justifyContent","listStyle","padding","gatsby_browser_entry","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography","n","Typography","baseFontSize","baseLineHeight","scaleRatioOLD","scaleRatio","headerFontFamily","bodyFontFamily","headerColor","bodyColor","headerWeight","bodyWeight","boldWeight","googleFonts","styles","TopNav","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Layout","header","_this$props","children","pathname","boxShadow","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","Date","getFullYear","SEO","_ref","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"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","file":"component---src-templates-blog-post-js-70e7e07b028081e11a81.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n//import Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  // eslint-disable-next-line\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  //const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      {/*\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      */}\n      <p>\n        Written by <strong>Matthew Reishus.</strong>\n      </p>\n      {/*\n      <p>\n        Written by <strong>{author}</strong> who lives and works in San\n        Francisco building useful things.\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>\n          You should follow him on Twitter\n        </a>\n      </p>\n      */}\n    </div>\n  )\n}\n\nexport default Bio\n\n/*\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n\n*/\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Helmet from \"react-helmet\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nfunction waitForGlobal(name, timeout = 300) {\n  return new Promise((resolve, reject) => {\n    let waited = 0\n\n    function wait(interval) {\n      setTimeout(() => {\n        waited += interval\n        // some logic to check if script is loaded\n        // usually it something global in window object\n        if (window[name] !== undefined) {\n          return resolve()\n        }\n        if (waited >= timeout * 1000) {\n          return reject({ message: \"Timeout\" })\n        }\n        wait(interval * 2)\n      }, interval)\n    }\n\n    wait(30)\n  })\n}\n\n/* eslint-disable no-restricted-globals */\nclass BlogPostTemplate extends React.Component {\n  componentDidMount() {\n    waitForGlobal(\"MathJax\").then(() => {\n      top.MathJax.Hub.Config({\n        tex2jax: {\n          inlineMath: [[\"$\", \"$\"], [\"\\\\(\", \"\\\\)\"]],\n          displayMath: [[\"$$\", \"$$\"], [\"[\", \"]\"]],\n          processEscapes: true,\n          processEnvironments: true,\n          skipTags: [\"script\", \"noscript\", \"style\", \"textarea\", \"pre\"],\n          TeX: {\n            equationNumbers: { autoNumber: \"AMS\" },\n            extensions: [\"AMSmath.js\", \"AMSsymbols.js\"],\n          },\n        },\n      })\n    })\n    if (top.MathJax != null) {\n      top.MathJax.Hub.Queue([\"Typeset\", top.MathJax.Hub])\n    }\n  }\n\n  componentDidUpdate() {\n    if (top.MathJax != null) {\n      top.MathJax.Hub.Queue([\"Typeset\", top.MathJax.Hub])\n    }\n  }\n\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <Helmet>\n          <script\n            type=\"text/javascript\"\n            src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"\n            async\n          />\n        </Helmet>\n        <h1\n          style={{\n            marginTop: rhythm(1),\n            marginBottom: 0,\n          }}\n        >\n          {post.frontmatter.title}\n        </h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\n\nconst mytheme = {\n  title: \"My Theme\",\n  baseFontSize: \"15px\",\n  baseLineHeight: 1.6,\n  scaleRatioOLD: 1.7333,\n  scaleRatio: 2,\n  headerFontFamily: [\"Libre Baskerville\", \"Georgia\", \"serif\"],\n  bodyFontFamily: [\"Libre Baskerville\", \"Georgia\", \"serif\"],\n  headerColor: \"hsla(0,0%,0%,0.87)\",\n  bodyColor: \"hsla(0,0%,0%,0.78)\",\n  headerWeight: 400,\n  bodyWeight: 400,\n  boldWeight: \"bold\",\n  googleFonts: [\n    {\n      name: \"Libre Baskerville\",\n      styles: [\"400\", \"700\"],\n    },\n  ],\n}\n\nconst typography = new Typography(mytheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport \"./layout.css\"\n\nconst TopNav = () => {\n  return (\n    <nav>\n      <ol>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ol>\n    </nav>\n  )\n}\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(28),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>\n          <TopNav />\n          {header}\n        </header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}\n          {/*, Built with {` `} <a href=\"https://www.gatsbyjs.org\">Gatsby</a> */}\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}