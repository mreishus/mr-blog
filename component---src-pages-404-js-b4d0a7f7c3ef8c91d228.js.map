{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","n","Typography","baseFontSize","baseLineHeight","scaleRatioOLD","scaleRatio","headerFontFamily","bodyFontFamily","headerColor","bodyColor","headerWeight","bodyWeight","boldWeight","googleFonts","name","styles","TopNav","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","Layout","header","_this$props","children","pathname","style","Object","assign","marginBottom","marginTop","boxShadow","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","SEO","_ref","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"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","file":"component---src-pages-404-js-b4d0a7f7c3ef8c91d228.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\n\nconst mytheme = {\n  title: \"My Theme\",\n  baseFontSize: \"15px\",\n  baseLineHeight: 1.6,\n  scaleRatioOLD: 1.7333,\n  scaleRatio: 2,\n  headerFontFamily: [\"Libre Baskerville\", \"Georgia\", \"serif\"],\n  bodyFontFamily: [\"Libre Baskerville\", \"Georgia\", \"serif\"],\n  headerColor: \"hsla(0,0%,0%,0.87)\",\n  bodyColor: \"hsla(0,0%,0%,0.78)\",\n  headerWeight: 400,\n  bodyWeight: 400,\n  boldWeight: \"bold\",\n  googleFonts: [\n    {\n      name: \"Libre Baskerville\",\n      styles: [\"400\", \"700\"],\n    },\n  ],\n}\n\nconst typography = new Typography(mytheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport \"./layout.css\"\n\nconst TopNav = () => {\n  return (\n    <nav>\n      <ol>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ol>\n    </nav>\n  )\n}\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(28),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>\n          <TopNav />\n          {header}\n        </header>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}\n          {/*, Built with {` `} <a href=\"https://www.gatsbyjs.org\">Gatsby</a> */}\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}